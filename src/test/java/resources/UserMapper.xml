<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scil.user.center.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.ygy.learn.mybatis.entity.UserDO">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="system" column="system"/>
        <result property="deleted" column="deleted"/>
        <result property="status" column="status"/>
        <result property="lastLoginTime" column="last_login_time"/>
        <result property="registerTime" column="register_time"/>
        <result property="passwordUpdateTime" column="password_update_time"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
    </resultMap>
    
    
    <!-- 批量新增 主键命名为id-->
    <insert id="insert" parameterType="com.ygy.learn.mybatis.entity.UserDO" useGeneratedKeys="true" keyProperty="id">
		insert into user(
		    id,
		    username,
		    password,
		    salt,
		    system,
		    deleted,
		    status,
		    last_login_time,
		    register_time,
		    password_update_time,
		    create_time,
		    update_time,
		    create_by,
		    update_by
		)VALUES(
			#{id},
			#{username},
			#{password},
			#{salt},
			#{system},
			#{deleted},
			#{status},
			#{lastLoginTime},
			#{registerTime},
			#{passwordUpdateTime},
			#{createTime},
			#{updateTime},
			#{createBy},
			#{updateBy}
	    )
	</insert>
	
	<!-- 批量新增-->
	<insert id="insertInBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
		insert into user(
		   id,
		   username,
		   password,
		   salt,
		   system,
		   deleted,
		   status,
		   last_login_time,
		   register_time,
		   password_update_time,
		   create_time,
		   update_time,
		   create_by,
		   update_by
		) values
		<foreach collection="list" item="item" separator=",">
		(
			#{item.id},
			#{item.username},
			#{item.password},
			#{item.salt},
			#{item.system},
			#{item.deleted},
			#{item.status},
			#{item.lastLoginTime},
			#{item.registerTime},
			#{item.passwordUpdateTime},
			#{item.createTime},
			#{item.updateTime},
			#{item.createBy},
			#{item.updateBy}
		)
		</foreach>
	</insert>
	
	<sql id="update_sql">
        <set>
			<if test="username != null">
	    		username= #{username},
			</if>
			<if test="password != null">
	    		password= #{password},
			</if>
			<if test="salt != null">
	    		salt= #{salt},
			</if>
			<if test="system != null">
	    		system= #{system},
			</if>
			<if test="deleted != null">
	    		deleted= #{deleted},
			</if>
			<if test="status != null">
	    		status= #{status},
			</if>
			<if test="lastLoginTime != null">
	    		last_login_time= #{lastLoginTime},
			</if>
			<if test="registerTime != null">
	    		register_time= #{registerTime},
			</if>
			<if test="passwordUpdateTime != null">
	    		password_update_time= #{passwordUpdateTime},
			</if>
			<if test="createTime != null">
	    		create_time= #{createTime},
			</if>
			<if test="updateTime != null">
	    		update_time= #{updateTime},
			</if>
			<if test="createBy != null">
	    		create_by= #{createBy},
			</if>
			<if test="updateBy != null">
	    		update_by= #{updateBy},
			</if>
        </set>
    </sql>
    
    <!--通用更新(请谨慎使用, 防止全表更新) -->
    <update id="update" parameterType="com.ygy.learn.mybatis.entity.UserDO">
        UPDATE user
        <include refid="update_sql"/>
        where id = #{id}
    </update>

    <sql id="updateInBatch_sql">
        <set>
			<if test="entity.username != null">
				username= #{entity.username},
	        </if>
			<if test="entity.password != null">
				password= #{entity.password},
	        </if>
			<if test="entity.salt != null">
				salt= #{entity.salt},
	        </if>
			<if test="entity.system != null">
				system= #{entity.system},
	        </if>
			<if test="entity.deleted != null">
				deleted= #{entity.deleted},
	        </if>
			<if test="entity.status != null">
				status= #{entity.status},
	        </if>
			<if test="entity.lastLoginTime != null">
				last_login_time= #{entity.lastLoginTime},
	        </if>
			<if test="entity.registerTime != null">
				register_time= #{entity.registerTime},
	        </if>
			<if test="entity.passwordUpdateTime != null">
				password_update_time= #{entity.passwordUpdateTime},
	        </if>
			<if test="entity.createTime != null">
				create_time= #{entity.createTime},
	        </if>
			<if test="entity.updateTime != null">
				update_time= #{entity.updateTime},
	        </if>
			<if test="entity.createBy != null">
				create_by= #{entity.createBy},
	        </if>
			<if test="entity.updateBy != null">
				update_by= #{entity.updateBy},
	        </if>
        </set>
    </sql>

	<update id="updateInBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
			update user
            <include refid="updateInBatch_sql"/>
			where id = #{item.id};
		</foreach>
    </update>
    
    <!--根据传入对象进行删除 慎用-->
    <delete id="delete" parameterType="com.ygy.learn.mybatis.entity.UserDO">
		delete from user
		<include refid="where_condition"/>
	</delete>
	
	<!-- 根据主键进行删除-->
    <delete id="deleteByIds" parameterType="java.util.List">
		delete from user where id in  
		<foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<sql id="columns">
		id,
		username,
		password,
		salt,
		system,
		deleted,
		status,
		last_login_time,
		register_time,
		password_update_time,
		create_time,
		update_time,
		create_by,
		update_by
	</sql>
	
	<sql id="where_condition">
        <where>
			<if test="id != null and id != ''">
        		and id=#{id}
    		</if>
			<if test="username != null and username != ''">
        		and username=#{username}
    		</if>
			<if test="password != null and password != ''">
        		and password=#{password}
    		</if>
			<if test="salt != null and salt != ''">
        		and salt=#{salt}
    		</if>
			<if test="system != null">
        		and system=#{system}
    		</if>
			<if test="deleted != null">
        		and deleted=#{deleted}
    		</if>
			<if test="status != null">
        		and status=#{status}
    		</if>
			<if test="lastLoginTime != null">
        		and last_login_time=#{lastLoginTime}
    		</if>
			<if test="registerTime != null">
        		and register_time=#{registerTime}
    		</if>
			<if test="passwordUpdateTime != null">
        		and password_update_time=#{passwordUpdateTime}
    		</if>
			<if test="createTime != null">
        		and create_time=#{createTime}
    		</if>
			<if test="updateTime != null">
        		and update_time=#{updateTime}
    		</if>
			<if test="createBy != null and createBy != ''">
        		and create_by=#{createBy}
    		</if>
			<if test="updateBy != null and updateBy != ''">
        		and update_by=#{updateBy}
    		</if>
        </where>
    </sql>

	<!--根据对象查询列表-->
	<select id="getList" resultMap="BaseResultMap" parameterType="com.ygy.learn.mybatis.entity.UserDO">
        SELECT
        <include refid="columns"/>
		FROM user
	    <include refid="where_condition"/>
    </select>

    <!--根据对象查询单个对象-->
    <select id="get" resultMap="BaseResultMap" parameterType="com.ygy.learn.mybatis.entity.UserDO">
        SELECT
        <include refid="columns"/>
		FROM user
	    <include refid="where_condition"/>
    </select>

    <!--根据主键查询单个对象-->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="columns"/>
		FROM user
	    where id = #{id}
    </select>

    <!--根据主键集合查询单个对象-->
    <select id="getListByIds" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT
        <include refid="columns"/>
        FROM user
        where id in
        <foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
			#{item}
        </foreach>
    </select>

    <select id="getListByCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="columns"/>
        FROM user t
        <where>
			<if test="id != null and id != ''">
                and id=#{id}
            </if>
			<if test="username != null and username != ''">
                and username=#{username}
            </if>
			<if test="password != null and password != ''">
                and password=#{password}
            </if>
			<if test="salt != null and salt != ''">
                and salt=#{salt}
            </if>
			<if test="system != null">
                and system=#{system}
            </if>
			<if test="deleted != null">
                and deleted=#{deleted}
            </if>
			<if test="status != null">
                and status=#{status}
            </if>
			<if test="lastLoginTime != null">
                and last_login_time=#{lastLoginTime}
            </if>
			<if test="registerTime != null">
                and register_time=#{registerTime}
            </if>
			<if test="passwordUpdateTime != null">
                and password_update_time=#{passwordUpdateTime}
            </if>
			<if test="createTime != null">
                and create_time=#{createTime}
            </if>
			<if test="updateTime != null">
                and update_time=#{updateTime}
            </if>
			<if test="createBy != null and createBy != ''">
                and create_by=#{createBy}
            </if>
			<if test="updateBy != null and updateBy != ''">
                and update_by=#{updateBy}
            </if>
        </where>
    </select>

</mapper>